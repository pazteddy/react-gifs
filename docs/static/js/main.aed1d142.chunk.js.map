{ "version": 3, "sources": ["components/AddCategory.js", "helpers/getGifs.js", "components/GifGridItem.js", "components/GifGrid.js", "hooks/useFetchGifs.js", "GifExpertApp.js", "index.js"], "names": ["AddCategory", "setCategorias", "useState", "inputValue", "setInputValue", "onSubmit", "e", "preventDefault", "trim", "length", "cats", "type", "name", "id", "value", "onChange", "target", "getGifs", "categoria", "a", "url", "encodeURI", "fetch", "resp", "json", "data", "gifs", "map", "img", "title", "images", "downsized_medium", "GifGridItem", "className", "src", "alt", "GifGrid", "loading", "state", "setState", "useEffect", "then", "useFetchGifs", "GifExpertApp", "categorias", "divRoot", "document", "querySelector", "ReactDOM", "render"], "mappings": "qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAgBhD,OACE,sBAAMC,SAVe,SAACC,GAEpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKlB,SACE,uBACEO,KAAK,OACLC,KAAK,GACLC,GAAG,GACHC,MAAOX,EACPY,SApBoB,SAACT,GAEzBF,EAAcE,EAAEU,OAAOF,a,+BCRdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,gDAEgCC,UAAUH,GAF1C,+DAGFI,MAAMF,GAHJ,cAGfG,EAHe,gBAIAA,EAAKC,OAJL,uBAIdC,EAJc,EAIdA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLf,GAAIe,EAAIf,GACRgB,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAVjB,kBAcdM,GAdc,4CAAH,sDCEPM,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IACpC,OACE,sBAAKa,UAAU,yCAAf,UACE,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,kCAAKA,SCDEO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,UAAe,ECDb,SAAEA,GAAe,IAAD,EAChBhB,mBAAS,CACjCuB,KAAM,GACNY,SAAS,IAH+B,mBACnCC,EADmC,KAC5BC,EAD4B,KAgB1C,OAVAC,qBAAU,WACRvB,EAASC,GACRuB,MAAM,SAAAb,GACHW,EAAS,CACPd,KAAMG,EACNS,SAAQ,SAGb,CAAEnB,IAEEoB,EDLyBI,CAAaxB,GAAhCY,EAV0B,EAU/BL,KAAYY,EAVmB,EAUnBA,QAEpB,OACE,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDf,IACjDmB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEMH,EAAOH,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEIA,GADGA,EAAIf,aEKR8B,EA3BM,WAAI,MAGazC,mBAAS,CAAC,mBAHvB,mBAGhB0C,EAHgB,KAGJ3C,EAHI,KASvB,OACE,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEI2C,EAAWjB,KAAK,SAAAT,GAAS,OACvB,cAAC,EAAD,CAEAA,UAAaA,GADRA,YCjBT2B,G,MAAUC,SAASC,cAAc,UACvCC,IAASC,OACL,cAAC,EAAD,IAAkBJ,K", "file": "static/js/main.aed1d142.chunk.js", "sourcesContent": ["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategorias }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e)=>{\r\n    // console.log(e.target.value);\r\n    setInputValue(e.target.value);\r\n  }\r\n  const onHandleSubmit = (e) =>{\r\n    // Evita que se recargue la pagina\r\n      e.preventDefault();\r\n      if(inputValue.trim().length > 2){\r\n        setCategorias(cats => [inputValue,...cats]);\r\n        setInputValue('');\r\n      }\r\n      \r\n  };\r\n  return (\r\n    <form onSubmit={ onHandleSubmit }>\r\n      <input \r\n        type=\"text\" \r\n        name=\"\" \r\n        id=\"\"\r\n        value={inputValue}\r\n        onChange={ handleInputChange }\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategorias: PropTypes.func.isRequired\r\n}\r\n", "export const getGifs = async( categoria )=>{\r\n\r\n  const url= `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria) }&limit=10&api_key=2rPsp0GvJxUDllDQN4BjIlb8YV9N6VM0`;\r\n  const resp = await fetch(url);\r\n  const {data} = await resp.json();\r\n  //console.log(data);\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  });\r\n  //console.log(gifs);\r\n  return gifs;\r\n};", "import React from 'react';\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p> {title}</p>\r\n    </div>\r\n  )\r\n}\r\n", "import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\n import { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {categoria}) => {\r\n  // const [images, setImages] = useState([]);\r\n  // //Solo se llame una vez para traer los gifs asi se actulice el componente\r\n  // useEffect(() => {\r\n  //   getGifs(categoria)\r\n  //   .then( imgs => setImages( imgs));\r\n  // }, [ categoria ]);\r\n\r\n  //getGifs();\r\n\r\n  const { data:images,loading } = useFetchGifs(categoria);\r\n  \r\n  return (\r\n    <>\r\n    <h3 className=\"animate__animated animate__fadeIn\">{categoria}</h3>\r\n    { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n    <div className=\"card-grid\">\r\n        {\r\n          images.map( img => (\r\n            <GifGridItem \r\n            key = {img.id}\r\n            {...img}/>\r\n          ))\r\n        }\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n", "import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( categoria ) =>{\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  }); \r\n\r\n  useEffect(() => {\r\n    getGifs( categoria )\r\n    .then( img => {\r\n        setState({\r\n          data: img,\r\n          loading:false\r\n        })\r\n    });\r\n  }, [ categoria ]);\r\n\r\n  return state; // {data: [],loading: true}\r\n}\r\n\r\n\r\n", "import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\nconst GifExpertApp = ()=>{\r\n\r\n  // const categorias=['One Punch','Heroe Academia','Dragon Ball'];\r\n  const [categorias, setCategorias] = useState(['Heroe Academia']);\r\n  // const handleAdd = () =>{\r\n  //   //setCategorias([...categorias,'Garfield']);\r\n  //   setCategorias( cats => [...cats,'Garfield']);\r\n  // }\r\n\r\n  return(\r\n    <>\r\n    <h2>GifExpertapp</h2>\r\n    <AddCategory setCategorias={setCategorias}/>\r\n    <hr/>\r\n    {/* <button onClick= {handleAdd}>Agregar</button> */}\r\n    <ol>\r\n      { \r\n        categorias.map( categoria =>\r\n          <GifGrid \r\n          key={categoria}\r\n          categoria = {categoria}/>\r\n        )\r\n      }\r\n    </ol>\r\n    </>\r\n  )\r\n}\r\nexport default GifExpertApp;\r\n//Snippet rafc\r\n// import React from 'react'\r\n\r\n// export const GifExpertApp = () => {\r\n//   return (\r\n//     <div>\r\n      \r\n//     </div>\r\n//   )\r\n// }\r\n", "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nconst divRoot = document.querySelector('#root');\nReactDOM.render( \n    <GifExpertApp />, divRoot\n);\n\n"], "sourceRoot": "" }